!SESSION 2023-06-25 23:02:26.955 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=es_PE
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

This is a continuation of log file C:\Users\deseo\OneDrive\Escritorio\PROYECTO ALGORITMIA\Proyecto Base por terminar\.metadata\.bak_0.log
Created Time: 2023-06-26 01:51:22.636

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 01:51:22.637
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 01:51:22.638
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 01:51:22.652
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.JComboBox;
import javax.swing.JButton;
import javax.swing.DefaultComboBoxModel;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JTextArea;

public class Vender extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JComboBox<String> cboModelo;
	private JButton btnVender;
	private JButton btnCerrar;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Vender dialog = new Vender();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public Vender() {
		setTitle("Vender");
		setModal(true);
		setBounds(100, 100, 577, 400);
		getContentPane().setLayout(null);
		
		lblModelo = new JLabel("Modelo");
		lblModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblModelo.setBounds(20, 10, 78, 28);
		getContentPane().add(lblModelo);
		
		lblPrecio = new JLabel("Precio (S/)");
		lblPrecio.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblPrecio.setBounds(20, 48, 78, 28);
		getContentPane().add(lblPrecio);
		
		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblCantidad.setBounds(20, 86, 78, 28);
		getContentPane().add(lblCantidad);
		
		txtPrecio = new JTextField();
		txtPrecio.setText("610.0\r\n");
		txtPrecio.setFont(new Font("Tahoma", Font.PLAIN, 14));
		txtPrecio.setBounds(111, 55, 215, 19);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);
		
		txtCantidad = new JTextField();
		txtCantidad.setFont(new Font("Tahoma", Font.PLAIN, 14));
		txtCantidad.setColumns(10);
		txtCantidad.setBounds(111, 93, 215, 19);
		getContentPane().add(txtCantidad);
		
		cboModelo = new JComboBox<String>();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Ladrillo King Kong 18 Huecos", "Ladrillo King Kong Macizo", "Ladrillo Pandereta Acanalada", "Ladrillo Patelero", "Ladrillo Techo Hueco"}));
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.setBounds(108, 16, 215, 21);
		getContentPane().add(cboModelo);
		
		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnVender.setBounds(455, 16, 85, 21);
		getContentPane().add(btnVender);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(455, 41, 85, 21);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		txtS.setBounds(10, 139, 543, 214);
		getContentPane().add(txtS);
	}
	
		//Datos minimos para el funcionamiento de la generación de reportes
	public static int canven0 = 0, canven1 = 0, canven2 = 0, canven3 = 0, canven4 = 0, suma = 0;
	public static int canvenmil0 = 0, canvenmil1 = 0, canvenmil2 = 0, canvenmil3 = 0, canvenmil4 = 0;
	public static double imptot = 0,imptot0 = 0.0, imptot1 = 0.0, imptot2 = 0.0, imptot3 = 0.0, imptot4 = 0.0; 
	public static double preciopro = 0.0, preciomayor = 0.0, preciomenor = 0.0;
	
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		double pre;
		mod = leerModelo1();
		pre = leerPrecio1(mod);
		mostrarPrecio(pre);
	}
	
	int leerModelo1() {
		return cboModelo.getSelectedIndex();
	}
	
	double leerPrecio1(int m) {
		switch (m) {
			case 0: return Tienda.precio0; 
			case 1: return Tienda.precio1;
			case 2: return Tienda.precio2;
			case 3: return Tienda.precio3;
			default: return Tienda.precio4;
		}
	}
	
	void preciosCalcular(double p) {
		for (int i = 0; i < p; i++) {
			if (i == 0) 
				preciomenor= p ;
			else (p < preciomenor)
				preciomenor = p;
			
		}
	}
	
	void mostrarPrecio(double pre) {
		txtPrecio.setText(pre + "");
	}
	
	protected void actionPerformedBtnVender(ActionEvent e) {
		txtS.setText("");
		int mod, can, obs;
		double pre, icom, ides, ipag;
		String modelo;
		mod = leerModelo();
		pre = leerPrecio(mod);
		can = leerCantidad();
		modelo = leerModeloLadrillo(mod);
		icom = calcularImporteCompra(mod, can);
		ides = calcularImporteDescuento(can, icom);
		ipag = calcularImportePagar(icom, ides);
		sumaImportePagar();
		obs = calcularObsequios(can);
		efectuarIncrementos(mod, can, ipag);
		mostrarResultados(modelo, pre, can, obs, icom, ides, ipag);
		suma++;
		MensajeDeAlerta();
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	double leerPrecio(int m) {
		switch (m) {
			case 0: return Tienda.precio0;
			case 1: return Tienda.precio1;
			case 2: return Tienda.precio2;
			case 3: return Tienda.precio3;
			default: return Tienda.precio4;
		}
	}
	
	int leerCantidad() {
		return Integer.parseInt(txtCantidad.getText());
	}
	
	String leerModeloLadrillo(int m) {
		switch (m) {
			case 0: return "Ladrillo King Kong 18 Huecos";
			case 1: return "Ladrillo King Kong Macizo";
			case 2: return "Ladrillo Pandereta Acanalada";
			case 3: return "Ladrillo Patelero";
			default: return "Ladrillo Techo Hueco";
		}
	}
	
	
	double calcularImporteCompra(int m, int c) {
		switch (m) {
			case 0: return 610.0 * c;
			case 1: return 920.0 * c;
			case 2: return 510.0 * c;
			case 3: return 2200 * c;
			default: return 2350 * c;
		}
	}
	
	double calcularImporteDescuento (int c, double ic) {
		if (c >= 1 && c <= 5) return Tienda.porcentaje1 * ic;
		else if (c >= 6 && c <= 10) return Tienda.porcentaje2 * ic;
		else if (c >= 11 && c <= 15) return Tienda.porcentaje3 * ic;
		else if (c >= 16 && c <= 20) return Tienda.porcentaje4 * ic;
		else return Tienda.porcentaje5 * ic;
	}

	double calcularImportePagar(double ic, double id) {
		return id-ic;
	}
	
	int calcularObsequios (int c) {
		if (c >= 1 && c <= 5) return Tienda.obsequioCantidad1;
		else if (c >= 6 && c <= 10) return Tienda.obsequioCantidad2;
		else if (c >= 11 && c <= 15) return Tienda.obsequioCantidad3;
		else if (c >= 16 && c <= 20) return Tienda.obsequioCantidad4;
		else return Tienda.obsequioCantidad5;
	}
	
	void preciosPromedio() {
			preciopro = (Tienda.precio0 + Tienda.precio1 + Tienda.precio2 + Tienda.precio3 + Tienda.precio4) / 5;
	}
	
	void efectuarIncrementos(int m, int c, double ip) {
		switch (m) {
			case 0:
				imptot0 += ip;
				canven0 ++;
				canvenmil0 += c;
				break;
			case 1:
				imptot1 += ip;
				canven1 ++;
				canvenmil1 += c;

				break;
			case 2:
				imptot2 += ip;
				canven2 ++;
				canvenmil2 += c;
				break;
			case 3:
				imptot3 += ip;
				canven3 ++;
				canvenmil3 += c;
				break;
			default:
				imptot4 += ip;
				canven4 ++;
				canvenmil4 += c;
		}
	}
	
	double sumaImportePagar() {
		return imptot = imptot0 + imptot1+ imptot2 + imptot3 + imptot4;
	}
	
	void MensajeDeAlerta (){
		 while (suma % 5 == 0) {
		//Declarar una variable referencia que permita controlar la caja
			DialogoMensajeDeAlerta d;
		//Crear la caja de diálogo y asignar el control a las variables
			d = new DialogoMensajeDeAlerta();
		//Fijar la localización de la caja de diálogo en relación a la ventana de la tienda
			d.setLocationRelativeTo(this);
		//Hacer visible la caja de diálogo
			d.setVisible(true); 
			break;
		 }
	}
	
	
	void mostrarResultados (String mod, double p, int c, int o, double ic, double id, double ip) {
		
		txtS.append("Modelo               : " + mod + "\n");
		txtS.append("Precio por millar    : " + p + "\n");
		txtS.append("Cantidad adquirida   : " + c + " millares" + "\n");
		txtS.append("Importe compra       : " + ic + "\n");
		txtS.append("Importe descuento    : " + id + "\n");
		txtS.append("Importe a pagar      : " + ip + "\n");
		txtS.append("Tipo de obsequio     : " + "Badilejo" + "\n");
		txtS.append("Unidades a obsequiar : " + o + "\n");	
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}




----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1036)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui 4 0 2023-06-26 01:51:22.654
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1036)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 01:51:23.374
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.JComboBox;
import javax.swing.JButton;
import javax.swing.DefaultComboBoxModel;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JTextArea;

public class Vender extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JComboBox<String> cboModelo;
	private JButton btnVender;
	private JButton btnCerrar;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Vender dialog = new Vender();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public Vender() {
		setTitle("Vender");
		setModal(true);
		setBounds(100, 100, 577, 400);
		getContentPane().setLayout(null);
		
		lblModelo = new JLabel("Modelo");
		lblModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblModelo.setBounds(20, 10, 78, 28);
		getContentPane().add(lblModelo);
		
		lblPrecio = new JLabel("Precio (S/)");
		lblPrecio.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblPrecio.setBounds(20, 48, 78, 28);
		getContentPane().add(lblPrecio);
		
		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblCantidad.setBounds(20, 86, 78, 28);
		getContentPane().add(lblCantidad);
		
		txtPrecio = new JTextField();
		txtPrecio.setText("610.0\r\n");
		txtPrecio.setFont(new Font("Tahoma", Font.PLAIN, 14));
		txtPrecio.setBounds(111, 55, 215, 19);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);
		
		txtCantidad = new JTextField();
		txtCantidad.setFont(new Font("Tahoma", Font.PLAIN, 14));
		txtCantidad.setColumns(10);
		txtCantidad.setBounds(111, 93, 215, 19);
		getContentPane().add(txtCantidad);
		
		cboModelo = new JComboBox<String>();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Ladrillo King Kong 18 Huecos", "Ladrillo King Kong Macizo", "Ladrillo Pandereta Acanalada", "Ladrillo Patelero", "Ladrillo Techo Hueco"}));
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.setBounds(108, 16, 215, 21);
		getContentPane().add(cboModelo);
		
		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnVender.setBounds(455, 16, 85, 21);
		getContentPane().add(btnVender);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(455, 41, 85, 21);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		txtS.setBounds(10, 139, 543, 214);
		getContentPane().add(txtS);
	}
	
		//Datos minimos para el funcionamiento de la generación de reportes
	public static int canven0 = 0, canven1 = 0, canven2 = 0, canven3 = 0, canven4 = 0, suma = 0;
	public static int canvenmil0 = 0, canvenmil1 = 0, canvenmil2 = 0, canvenmil3 = 0, canvenmil4 = 0;
	public static double imptot = 0,imptot0 = 0.0, imptot1 = 0.0, imptot2 = 0.0, imptot3 = 0.0, imptot4 = 0.0; 
	public static double preciopro = 0.0, preciomayor = 0.0, preciomenor = 0.0;
	
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		double pre;
		mod = leerModelo1();
		pre = leerPrecio1(mod);
		mostrarPrecio(pre);
	}
	
	int leerModelo1() {
		return cboModelo.getSelectedIndex();
	}
	
	double leerPrecio1(int m) {
		switch (m) {
			case 0: return Tienda.precio0; 
			case 1: return Tienda.precio1;
			case 2: return Tienda.precio2;
			case 3: return Tienda.precio3;
			default: return Tienda.precio4;
		}
	}
	
	void preciosCalcular(double p) {
		for (int i = 0; i < p; i++) {
			if (i == 0) 
				preciomenor= p ;
			else (p < preciomenor)
				preciomenor = p;
			
		}
	}
	
	void mostrarPrecio(double pre) {
		txtPrecio.setText(pre + "");
	}
	
	protected void actionPerformedBtnVender(ActionEvent e) {
		txtS.setText("");
		int mod, can, obs;
		double pre, icom, ides, ipag;
		String modelo;
		mod = leerModelo();
		pre = leerPrecio(mod);
		can = leerCantidad();
		modelo = leerModeloLadrillo(mod);
		icom = calcularImporteCompra(mod, can);
		ides = calcularImporteDescuento(can, icom);
		ipag = calcularImportePagar(icom, ides);
		sumaImportePagar();
		obs = calcularObsequios(can);
		efectuarIncrementos(mod, can, ipag);
		mostrarResultados(modelo, pre, can, obs, icom, ides, ipag);
		suma++;
		MensajeDeAlerta();
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	double leerPrecio(int m) {
		switch (m) {
			case 0: return Tienda.precio0;
			case 1: return Tienda.precio1;
			case 2: return Tienda.precio2;
			case 3: return Tienda.precio3;
			default: return Tienda.precio4;
		}
	}
	
	int leerCantidad() {
		return Integer.parseInt(txtCantidad.getText());
	}
	
	String leerModeloLadrillo(int m) {
		switch (m) {
			case 0: return "Ladrillo King Kong 18 Huecos";
			case 1: return "Ladrillo King Kong Macizo";
			case 2: return "Ladrillo Pandereta Acanalada";
			case 3: return "Ladrillo Patelero";
			default: return "Ladrillo Techo Hueco";
		}
	}
	
	
	double calcularImporteCompra(int m, int c) {
		switch (m) {
			case 0: return 610.0 * c;
			case 1: return 920.0 * c;
			case 2: return 510.0 * c;
			case 3: return 2200 * c;
			default: return 2350 * c;
		}
	}
	
	double calcularImporteDescuento (int c, double ic) {
		if (c >= 1 && c <= 5) return Tienda.porcentaje1 * ic;
		else if (c >= 6 && c <= 10) return Tienda.porcentaje2 * ic;
		else if (c >= 11 && c <= 15) return Tienda.porcentaje3 * ic;
		else if (c >= 16 && c <= 20) return Tienda.porcentaje4 * ic;
		else return Tienda.porcentaje5 * ic;
	}

	double calcularImportePagar(double ic, double id) {
		return id-ic;
	}
	
	int calcularObsequios (int c) {
		if (c >= 1 && c <= 5) return Tienda.obsequioCantidad1;
		else if (c >= 6 && c <= 10) return Tienda.obsequioCantidad2;
		else if (c >= 11 && c <= 15) return Tienda.obsequioCantidad3;
		else if (c >= 16 && c <= 20) return Tienda.obsequioCantidad4;
		else return Tienda.obsequioCantidad5;
	}
	
	void preciosPromedio() {
			preciopro = (Tienda.precio0 + Tienda.precio1 + Tienda.precio2 + Tienda.precio3 + Tienda.precio4) / 5;
	}
	
	void efectuarIncrementos(int m, int c, double ip) {
		switch (m) {
			case 0:
				imptot0 += ip;
				canven0 ++;
				canvenmil0 += c;
				break;
			case 1:
				imptot1 += ip;
				canven1 ++;
				canvenmil1 += c;

				break;
			case 2:
				imptot2 += ip;
				canven2 ++;
				canvenmil2 += c;
				break;
			case 3:
				imptot3 += ip;
				canven3 ++;
				canvenmil3 += c;
				break;
			default:
				imptot4 += ip;
				canven4 ++;
				canvenmil4 += c;
		}
	}
	
	double sumaImportePagar() {
		return imptot = imptot0 + imptot1+ imptot2 + imptot3 + imptot4;
	}
	
	void MensajeDeAlerta (){
		 while (suma % 5 == 0) {
		//Declarar una variable referencia que permita controlar la caja
			DialogoMensajeDeAlerta d;
		//Crear la caja de diálogo y asignar el control a las variables
			d = new DialogoMensajeDeAlerta();
		//Fijar la localización de la caja de diálogo en relación a la ventana de la tienda
			d.setLocationRelativeTo(this);
		//Hacer visible la caja de diálogo
			d.setVisible(true); 
			break;
		 }
	}
	
	
	void mostrarResultados (String mod, double p, int c, int o, double ic, double id, double ip) {
		
		txtS.append("Modelo               : " + mod + "\n");
		txtS.append("Precio por millar    : " + p + "\n");
		txtS.append("Cantidad adquirida   : " + c + " millares" + "\n");
		txtS.append("Importe compra       : " + ic + "\n");
		txtS.append("Importe descuento    : " + id + "\n");
		txtS.append("Importe a pagar      : " + ip + "\n");
		txtS.append("Tipo de obsequio     : " + "Badilejo" + "\n");
		txtS.append("Unidades a obsequiar : " + o + "\n");	
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}




----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 01:51:23.376
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 01:51:23.378
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 01:51:24.927
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.JComboBox;
import javax.swing.JButton;
import javax.swing.DefaultComboBoxModel;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JTextArea;

public class Vender extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JComboBox<String> cboModelo;
	private JButton btnVender;
	private JButton btnCerrar;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Vender dialog = new Vender();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public Vender() {
		setTitle("Vender");
		setModal(true);
		setBounds(100, 100, 577, 400);
		getContentPane().setLayout(null);
		
		lblModelo = new JLabel("Modelo");
		lblModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblModelo.setBounds(20, 10, 78, 28);
		getContentPane().add(lblModelo);
		
		lblPrecio = new JLabel("Precio (S/)");
		lblPrecio.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblPrecio.setBounds(20, 48, 78, 28);
		getContentPane().add(lblPrecio);
		
		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblCantidad.setBounds(20, 86, 78, 28);
		getContentPane().add(lblCantidad);
		
		txtPrecio = new JTextField();
		txtPrecio.setText("610.0\r\n");
		txtPrecio.setFont(new Font("Tahoma", Font.PLAIN, 14));
		txtPrecio.setBounds(111, 55, 215, 19);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);
		
		txtCantidad = new JTextField();
		txtCantidad.setFont(new Font("Tahoma", Font.PLAIN, 14));
		txtCantidad.setColumns(10);
		txtCantidad.setBounds(111, 93, 215, 19);
		getContentPane().add(txtCantidad);
		
		cboModelo = new JComboBox<String>();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Ladrillo King Kong 18 Huecos", "Ladrillo King Kong Macizo", "Ladrillo Pandereta Acanalada", "Ladrillo Patelero", "Ladrillo Techo Hueco"}));
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.setBounds(108, 16, 215, 21);
		getContentPane().add(cboModelo);
		
		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnVender.setBounds(455, 16, 85, 21);
		getContentPane().add(btnVender);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(455, 41, 85, 21);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		txtS.setBounds(10, 139, 543, 214);
		getContentPane().add(txtS);
	}
	
		//Datos minimos para el funcionamiento de la generación de reportes
	public static int canven0 = 0, canven1 = 0, canven2 = 0, canven3 = 0, canven4 = 0, suma = 0;
	public static int canvenmil0 = 0, canvenmil1 = 0, canvenmil2 = 0, canvenmil3 = 0, canvenmil4 = 0;
	public static double imptot = 0,imptot0 = 0.0, imptot1 = 0.0, imptot2 = 0.0, imptot3 = 0.0, imptot4 = 0.0; 
	public static double preciopro = 0.0, preciomayor = 0.0, preciomenor = 0.0;
	
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		double pre;
		mod = leerModelo1();
		pre = leerPrecio1(mod);
		mostrarPrecio(pre);
	}
	
	int leerModelo1() {
		return cboModelo.getSelectedIndex();
	}
	
	double leerPrecio1(int m) {
		switch (m) {
			case 0: return Tienda.precio0; 
			case 1: return Tienda.precio1;
			case 2: return Tienda.precio2;
			case 3: return Tienda.precio3;
			default: return Tienda.precio4;
		}
	}
	
	void preciosCalcular(double p) {
		for (int i = 0; i < p; i++) {
			if (i == 0) 
				preciomenor= p ;
			else (p < preciomenor)
				preciomenor = p;
			
		}
	}
	
	void mostrarPrecio(double pre) {
		txtPrecio.setText(pre + "");
	}
	
	protected void actionPerformedBtnVender(ActionEvent e) {
		txtS.setText("");
		int mod, can, obs;
		double pre, icom, ides, ipag;
		String modelo;
		mod = leerModelo();
		pre = leerPrecio(mod);
		can = leerCantidad();
		modelo = leerModeloLadrillo(mod);
		icom = calcularImporteCompra(mod, can);
		ides = calcularImporteDescuento(can, icom);
		ipag = calcularImportePagar(icom, ides);
		sumaImportePagar();
		obs = calcularObsequios(can);
		efectuarIncrementos(mod, can, ipag);
		mostrarResultados(modelo, pre, can, obs, icom, ides, ipag);
		suma++;
		MensajeDeAlerta();
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	double leerPrecio(int m) {
		switch (m) {
			case 0: return Tienda.precio0;
			case 1: return Tienda.precio1;
			case 2: return Tienda.precio2;
			case 3: return Tienda.precio3;
			default: return Tienda.precio4;
		}
	}
	
	int leerCantidad() {
		return Integer.parseInt(txtCantidad.getText());
	}
	
	String leerModeloLadrillo(int m) {
		switch (m) {
			case 0: return "Ladrillo King Kong 18 Huecos";
			case 1: return "Ladrillo King Kong Macizo";
			case 2: return "Ladrillo Pandereta Acanalada";
			case 3: return "Ladrillo Patelero";
			default: return "Ladrillo Techo Hueco";
		}
	}
	
	
	double calcularImporteCompra(int m, int c) {
		switch (m) {
			case 0: return 610.0 * c;
			case 1: return 920.0 * c;
			case 2: return 510.0 * c;
			case 3: return 2200 * c;
			default: return 2350 * c;
		}
	}
	
	double calcularImporteDescuento (int c, double ic) {
		if (c >= 1 && c <= 5) return Tienda.porcentaje1 * ic;
		else if (c >= 6 && c <= 10) return Tienda.porcentaje2 * ic;
		else if (c >= 11 && c <= 15) return Tienda.porcentaje3 * ic;
		else if (c >= 16 && c <= 20) return Tienda.porcentaje4 * ic;
		else return Tienda.porcentaje5 * ic;
	}

	double calcularImportePagar(double ic, double id) {
		return id-ic;
	}
	
	int calcularObsequios (int c) {
		if (c >= 1 && c <= 5) return Tienda.obsequioCantidad1;
		else if (c >= 6 && c <= 10) return Tienda.obsequioCantidad2;
		else if (c >= 11 && c <= 15) return Tienda.obsequioCantidad3;
		else if (c >= 16 && c <= 20) return Tienda.obsequioCantidad4;
		else return Tienda.obsequioCantidad5;
	}
	
	void preciosPromedio() {
			preciopro = (Tienda.precio0 + Tienda.precio1 + Tienda.precio2 + Tienda.precio3 + Tienda.precio4) / 5;
	}
	
	void efectuarIncrementos(int m, int c, double ip) {
		switch (m) {
			case 0:
				imptot0 += ip;
				canven0 ++;
				canvenmil0 += c;
				break;
			case 1:
				imptot1 += ip;
				canven1 ++;
				canvenmil1 += c;

				break;
			case 2:
				imptot2 += ip;
				canven2 ++;
				canvenmil2 += c;
				break;
			case 3:
				imptot3 += ip;
				canven3 ++;
				canvenmil3 += c;
				break;
			default:
				imptot4 += ip;
				canven4 ++;
				canvenmil4 += c;
		}
	}
	
	double sumaImportePagar() {
		return imptot = imptot0 + imptot1+ imptot2 + imptot3 + imptot4;
	}
	
	void MensajeDeAlerta (){
		 while (suma % 5 == 0) {
		//Declarar una variable referencia que permita controlar la caja
			DialogoMensajeDeAlerta d;
		//Crear la caja de diálogo y asignar el control a las variables
			d = new DialogoMensajeDeAlerta();
		//Fijar la localización de la caja de diálogo en relación a la ventana de la tienda
			d.setLocationRelativeTo(this);
		//Hacer visible la caja de diálogo
			d.setVisible(true); 
			break;
		 }
	}
	
	
	void mostrarResultados (String mod, double p, int c, int o, double ic, double id, double ip) {
		
		txtS.append("Modelo               : " + mod + "\n");
		txtS.append("Precio por millar    : " + p + "\n");
		txtS.append("Cantidad adquirida   : " + c + " millares" + "\n");
		txtS.append("Importe compra       : " + ic + "\n");
		txtS.append("Importe descuento    : " + id + "\n");
		txtS.append("Importe a pagar      : " + ip + "\n");
		txtS.append("Tipo de obsequio     : " + "Badilejo" + "\n");
		txtS.append("Unidades a obsequiar : " + o + "\n");	
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}




----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 01:51:24.928
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 01:51:24.930
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 01:51:29.547
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.JComboBox;
import javax.swing.JButton;
import javax.swing.DefaultComboBoxModel;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JTextArea;

public class Vender extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JComboBox<String> cboModelo;
	private JButton btnVender;
	private JButton btnCerrar;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Vender dialog = new Vender();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public Vender() {
		setTitle("Vender");
		setModal(true);
		setBounds(100, 100, 577, 400);
		getContentPane().setLayout(null);
		
		lblModelo = new JLabel("Modelo");
		lblModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblModelo.setBounds(20, 10, 78, 28);
		getContentPane().add(lblModelo);
		
		lblPrecio = new JLabel("Precio (S/)");
		lblPrecio.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblPrecio.setBounds(20, 48, 78, 28);
		getContentPane().add(lblPrecio);
		
		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblCantidad.setBounds(20, 86, 78, 28);
		getContentPane().add(lblCantidad);
		
		txtPrecio = new JTextField();
		txtPrecio.setText("610.0\r\n");
		txtPrecio.setFont(new Font("Tahoma", Font.PLAIN, 14));
		txtPrecio.setBounds(111, 55, 215, 19);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);
		
		txtCantidad = new JTextField();
		txtCantidad.setFont(new Font("Tahoma", Font.PLAIN, 14));
		txtCantidad.setColumns(10);
		txtCantidad.setBounds(111, 93, 215, 19);
		getContentPane().add(txtCantidad);
		
		cboModelo = new JComboBox<String>();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Ladrillo King Kong 18 Huecos", "Ladrillo King Kong Macizo", "Ladrillo Pandereta Acanalada", "Ladrillo Patelero", "Ladrillo Techo Hueco"}));
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.setBounds(108, 16, 215, 21);
		getContentPane().add(cboModelo);
		
		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnVender.setBounds(455, 16, 85, 21);
		getContentPane().add(btnVender);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(455, 41, 85, 21);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		txtS.setBounds(10, 139, 543, 214);
		getContentPane().add(txtS);
	}
	
		//Datos minimos para el funcionamiento de la generación de reportes
	public static int canven0 = 0, canven1 = 0, canven2 = 0, canven3 = 0, canven4 = 0, suma = 0;
	public static int canvenmil0 = 0, canvenmil1 = 0, canvenmil2 = 0, canvenmil3 = 0, canvenmil4 = 0;
	public static double imptot = 0,imptot0 = 0.0, imptot1 = 0.0, imptot2 = 0.0, imptot3 = 0.0, imptot4 = 0.0; 
	public static double preciopro = 0.0, preciomayor = 0.0, preciomenor = 0.0;
	
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		double pre;
		mod = leerModelo1();
		pre = leerPrecio1(mod);
		mostrarPrecio(pre);
	}
	
	int leerModelo1() {
		return cboModelo.getSelectedIndex();
	}
	
	double leerPrecio1(int m) {
		switch (m) {
			case 0: return Tienda.precio0; 
			case 1: return Tienda.precio1;
			case 2: return Tienda.precio2;
			case 3: return Tienda.precio3;
			default: return Tienda.precio4;
		}
	}
	
	void preciosCalcular(double p) {
		for (int i = 0; i < p; i++) {
			if (i == 0) 
				preciomenor= p ;
			else (p < preciomenor)
				preciomenor = p;
			
		}
	}
	
	void mostrarPrecio(double pre) {
		txtPrecio.setText(pre + "");
	}
	
	protected void actionPerformedBtnVender(ActionEvent e) {
		txtS.setText("");
		int mod, can, obs;
		double pre, icom, ides, ipag;
		String modelo;
		mod = leerModelo();
		pre = leerPrecio(mod);
		can = leerCantidad();
		modelo = leerModeloLadrillo(mod);
		icom = calcularImporteCompra(mod, can);
		ides = calcularImporteDescuento(can, icom);
		ipag = calcularImportePagar(icom, ides);
		sumaImportePagar();
		obs = calcularObsequios(can);
		efectuarIncrementos(mod, can, ipag);
		mostrarResultados(modelo, pre, can, obs, icom, ides, ipag);
		suma++;
		MensajeDeAlerta();
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	double leerPrecio(int m) {
		switch (m) {
			case 0: return Tienda.precio0;
			case 1: return Tienda.precio1;
			case 2: return Tienda.precio2;
			case 3: return Tienda.precio3;
			default: return Tienda.precio4;
		}
	}
	
	int leerCantidad() {
		return Integer.parseInt(txtCantidad.getText());
	}
	
	String leerModeloLadrillo(int m) {
		switch (m) {
			case 0: return "Ladrillo King Kong 18 Huecos";
			case 1: return "Ladrillo King Kong Macizo";
			case 2: return "Ladrillo Pandereta Acanalada";
			case 3: return "Ladrillo Patelero";
			default: return "Ladrillo Techo Hueco";
		}
	}
	
	
	double calcularImporteCompra(int m, int c) {
		switch (m) {
			case 0: return 610.0 * c;
			case 1: return 920.0 * c;
			case 2: return 510.0 * c;
			case 3: return 2200 * c;
			default: return 2350 * c;
		}
	}
	
	double calcularImporteDescuento (int c, double ic) {
		if (c >= 1 && c <= 5) return Tienda.porcentaje1 * ic;
		else if (c >= 6 && c <= 10) return Tienda.porcentaje2 * ic;
		else if (c >= 11 && c <= 15) return Tienda.porcentaje3 * ic;
		else if (c >= 16 && c <= 20) return Tienda.porcentaje4 * ic;
		else return Tienda.porcentaje5 * ic;
	}

	double calcularImportePagar(double ic, double id) {
		return id-ic;
	}
	
	int calcularObsequios (int c) {
		if (c >= 1 && c <= 5) return Tienda.obsequioCantidad1;
		else if (c >= 6 && c <= 10) return Tienda.obsequioCantidad2;
		else if (c >= 11 && c <= 15) return Tienda.obsequioCantidad3;
		else if (c >= 16 && c <= 20) return Tienda.obsequioCantidad4;
		else return Tienda.obsequioCantidad5;
	}
	
	void preciosPromedio() {
			preciopro = (Tienda.precio0 + Tienda.precio1 + Tienda.precio2 + Tienda.precio3 + Tienda.precio4) / 5;
	}
	
	void efectuarIncrementos(int m, int c, double ip) {
		switch (m) {
			case 0:
				imptot0 += ip;
				canven0 ++;
				canvenmil0 += c;
				break;
			case 1:
				imptot1 += ip;
				canven1 ++;
				canvenmil1 += c;

				break;
			case 2:
				imptot2 += ip;
				canven2 ++;
				canvenmil2 += c;
				break;
			case 3:
				imptot3 += ip;
				canven3 ++;
				canvenmil3 += c;
				break;
			default:
				imptot4 += ip;
				canven4 ++;
				canvenmil4 += c;
		}
	}
	
	double sumaImportePagar() {
		return imptot = imptot0 + imptot1+ imptot2 + imptot3 + imptot4;
	}
	
	void MensajeDeAlerta (){
		 while (suma % 5 == 0) {
		//Declarar una variable referencia que permita controlar la caja
			DialogoMensajeDeAlerta d;
		//Crear la caja de diálogo y asignar el control a las variables
			d = new DialogoMensajeDeAlerta();
		//Fijar la localización de la caja de diálogo en relación a la ventana de la tienda
			d.setLocationRelativeTo(this);
		//Hacer visible la caja de diálogo
			d.setVisible(true); 
			break;
		 }
	}
	
	
	void mostrarResultados (String mod, double p, int c, int o, double ic, double id, double ip) {
		
		txtS.append("Modelo               : " + mod + "\n");
		txtS.append("Precio por millar    : " + p + "\n");
		txtS.append("Cantidad adquirida   : " + c + " millares" + "\n");
		txtS.append("Importe compra       : " + ic + "\n");
		txtS.append("Importe descuento    : " + id + "\n");
		txtS.append("Importe a pagar      : " + ip + "\n");
		txtS.append("Tipo de obsequio     : " + "Badilejo" + "\n");
		txtS.append("Unidades a obsequiar : " + o + "\n");	
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}




----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 01:51:29.550
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 01:51:29.551
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 01:51:30.975
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.JComboBox;
import javax.swing.JButton;
import javax.swing.DefaultComboBoxModel;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JTextArea;

public class Vender extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JComboBox<String> cboModelo;
	private JButton btnVender;
	private JButton btnCerrar;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Vender dialog = new Vender();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public Vender() {
		setTitle("Vender");
		setModal(true);
		setBounds(100, 100, 577, 400);
		getContentPane().setLayout(null);
		
		lblModelo = new JLabel("Modelo");
		lblModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblModelo.setBounds(20, 10, 78, 28);
		getContentPane().add(lblModelo);
		
		lblPrecio = new JLabel("Precio (S/)");
		lblPrecio.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblPrecio.setBounds(20, 48, 78, 28);
		getContentPane().add(lblPrecio);
		
		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblCantidad.setBounds(20, 86, 78, 28);
		getContentPane().add(lblCantidad);
		
		txtPrecio = new JTextField();
		txtPrecio.setText("610.0\r\n");
		txtPrecio.setFont(new Font("Tahoma", Font.PLAIN, 14));
		txtPrecio.setBounds(111, 55, 215, 19);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);
		
		txtCantidad = new JTextField();
		txtCantidad.setFont(new Font("Tahoma", Font.PLAIN, 14));
		txtCantidad.setColumns(10);
		txtCantidad.setBounds(111, 93, 215, 19);
		getContentPane().add(txtCantidad);
		
		cboModelo = new JComboBox<String>();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Ladrillo King Kong 18 Huecos", "Ladrillo King Kong Macizo", "Ladrillo Pandereta Acanalada", "Ladrillo Patelero", "Ladrillo Techo Hueco"}));
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.setBounds(108, 16, 215, 21);
		getContentPane().add(cboModelo);
		
		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnVender.setBounds(455, 16, 85, 21);
		getContentPane().add(btnVender);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(455, 41, 85, 21);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		txtS.setBounds(10, 139, 543, 214);
		getContentPane().add(txtS);
	}
	
		//Datos minimos para el funcionamiento de la generación de reportes
	public static int canven0 = 0, canven1 = 0, canven2 = 0, canven3 = 0, canven4 = 0, suma = 0;
	public static int canvenmil0 = 0, canvenmil1 = 0, canvenmil2 = 0, canvenmil3 = 0, canvenmil4 = 0;
	public static double imptot = 0,imptot0 = 0.0, imptot1 = 0.0, imptot2 = 0.0, imptot3 = 0.0, imptot4 = 0.0; 
	public static double preciopro = 0.0, preciomayor = 0.0, preciomenor = 0.0;
	
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		double pre;
		mod = leerModelo1();
		pre = leerPrecio1(mod);
		mostrarPrecio(pre);
	}
	
	int leerModelo1() {
		return cboModelo.getSelectedIndex();
	}
	
	double leerPrecio1(int m) {
		switch (m) {
			case 0: return Tienda.precio0; 
			case 1: return Tienda.precio1;
			case 2: return Tienda.precio2;
			case 3: return Tienda.precio3;
			default: return Tienda.precio4;
		}
	}
	
	void preciosCalcular(double p) {
		for (int i = 0; i < p; i++) {
			if (i == 0) 
				preciomenor= p ;
			else (p < preciomenor)
				preciomenor = p;
			
		}
	}
	
	void mostrarPrecio(double pre) {
		txtPrecio.setText(pre + "");
	}
	
	protected void actionPerformedBtnVender(ActionEvent e) {
		txtS.setText("");
		int mod, can, obs;
		double pre, icom, ides, ipag;
		String modelo;
		mod = leerModelo();
		pre = leerPrecio(mod);
		can = leerCantidad();
		modelo = leerModeloLadrillo(mod);
		icom = calcularImporteCompra(mod, can);
		ides = calcularImporteDescuento(can, icom);
		ipag = calcularImportePagar(icom, ides);
		sumaImportePagar();
		obs = calcularObsequios(can);
		efectuarIncrementos(mod, can, ipag);
		mostrarResultados(modelo, pre, can, obs, icom, ides, ipag);
		suma++;
		MensajeDeAlerta();
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	double leerPrecio(int m) {
		switch (m) {
			case 0: return Tienda.precio0;
			case 1: return Tienda.precio1;
			case 2: return Tienda.precio2;
			case 3: return Tienda.precio3;
			default: return Tienda.precio4;
		}
	}
	
	int leerCantidad() {
		return Integer.parseInt(txtCantidad.getText());
	}
	
	String leerModeloLadrillo(int m) {
		switch (m) {
			case 0: return "Ladrillo King Kong 18 Huecos";
			case 1: return "Ladrillo King Kong Macizo";
			case 2: return "Ladrillo Pandereta Acanalada";
			case 3: return "Ladrillo Patelero";
			default: return "Ladrillo Techo Hueco";
		}
	}
	
	
	double calcularImporteCompra(int m, int c) {
		switch (m) {
			case 0: return 610.0 * c;
			case 1: return 920.0 * c;
			case 2: return 510.0 * c;
			case 3: return 2200 * c;
			default: return 2350 * c;
		}
	}
	
	double calcularImporteDescuento (int c, double ic) {
		if (c >= 1 && c <= 5) return Tienda.porcentaje1 * ic;
		else if (c >= 6 && c <= 10) return Tienda.porcentaje2 * ic;
		else if (c >= 11 && c <= 15) return Tienda.porcentaje3 * ic;
		else if (c >= 16 && c <= 20) return Tienda.porcentaje4 * ic;
		else return Tienda.porcentaje5 * ic;
	}

	double calcularImportePagar(double ic, double id) {
		return id-ic;
	}
	
	int calcularObsequios (int c) {
		if (c >= 1 && c <= 5) return Tienda.obsequioCantidad1;
		else if (c >= 6 && c <= 10) return Tienda.obsequioCantidad2;
		else if (c >= 11 && c <= 15) return Tienda.obsequioCantidad3;
		else if (c >= 16 && c <= 20) return Tienda.obsequioCantidad4;
		else return Tienda.obsequioCantidad5;
	}
	
	void preciosPromedio() {
			preciopro = (Tienda.precio0 + Tienda.precio1 + Tienda.precio2 + Tienda.precio3 + Tienda.precio4) / 5;
	}
	
	void efectuarIncrementos(int m, int c, double ip) {
		switch (m) {
			case 0:
				imptot0 += ip;
				canven0 ++;
				canvenmil0 += c;
				break;
			case 1:
				imptot1 += ip;
				canven1 ++;
				canvenmil1 += c;

				break;
			case 2:
				imptot2 += ip;
				canven2 ++;
				canvenmil2 += c;
				break;
			case 3:
				imptot3 += ip;
				canven3 ++;
				canvenmil3 += c;
				break;
			default:
				imptot4 += ip;
				canven4 ++;
				canvenmil4 += c;
		}
	}
	
	double sumaImportePagar() {
		return imptot = imptot0 + imptot1+ imptot2 + imptot3 + imptot4;
	}
	
	void MensajeDeAlerta (){
		 while (suma % 5 == 0) {
		//Declarar una variable referencia que permita controlar la caja
			DialogoMensajeDeAlerta d;
		//Crear la caja de diálogo y asignar el control a las variables
			d = new DialogoMensajeDeAlerta();
		//Fijar la localización de la caja de diálogo en relación a la ventana de la tienda
			d.setLocationRelativeTo(this);
		//Hacer visible la caja de diálogo
			d.setVisible(true); 
			break;
		 }
	}
	
	
	void mostrarResultados (String mod, double p, int c, int o, double ic, double id, double ip) {
		
		txtS.append("Modelo               : " + mod + "\n");
		txtS.append("Precio por millar    : " + p + "\n");
		txtS.append("Cantidad adquirida   : " + c + " millares" + "\n");
		txtS.append("Importe compra       : " + ic + "\n");
		txtS.append("Importe descuento    : " + id + "\n");
		txtS.append("Importe a pagar      : " + ip + "\n");
		txtS.append("Tipo de obsequio     : " + "Badilejo" + "\n");
		txtS.append("Unidades a obsequiar : " + o + "\n");	
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}




----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 01:51:30.978
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 01:51:30.980
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 01:51:34.528
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.JComboBox;
import javax.swing.JButton;
import javax.swing.DefaultComboBoxModel;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JTextArea;

public class Vender extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JComboBox<String> cboModelo;
	private JButton btnVender;
	private JButton btnCerrar;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Vender dialog = new Vender();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public Vender() {
		setTitle("Vender");
		setModal(true);
		setBounds(100, 100, 577, 400);
		getContentPane().setLayout(null);
		
		lblModelo = new JLabel("Modelo");
		lblModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblModelo.setBounds(20, 10, 78, 28);
		getContentPane().add(lblModelo);
		
		lblPrecio = new JLabel("Precio (S/)");
		lblPrecio.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblPrecio.setBounds(20, 48, 78, 28);
		getContentPane().add(lblPrecio);
		
		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblCantidad.setBounds(20, 86, 78, 28);
		getContentPane().add(lblCantidad);
		
		txtPrecio = new JTextField();
		txtPrecio.setText("610.0\r\n");
		txtPrecio.setFont(new Font("Tahoma", Font.PLAIN, 14));
		txtPrecio.setBounds(111, 55, 215, 19);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);
		
		txtCantidad = new JTextField();
		txtCantidad.setFont(new Font("Tahoma", Font.PLAIN, 14));
		txtCantidad.setColumns(10);
		txtCantidad.setBounds(111, 93, 215, 19);
		getContentPane().add(txtCantidad);
		
		cboModelo = new JComboBox<String>();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Ladrillo King Kong 18 Huecos", "Ladrillo King Kong Macizo", "Ladrillo Pandereta Acanalada", "Ladrillo Patelero", "Ladrillo Techo Hueco"}));
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.setBounds(108, 16, 215, 21);
		getContentPane().add(cboModelo);
		
		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnVender.setBounds(455, 16, 85, 21);
		getContentPane().add(btnVender);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(455, 41, 85, 21);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		txtS.setBounds(10, 139, 543, 214);
		getContentPane().add(txtS);
	}
	
		//Datos minimos para el funcionamiento de la generación de reportes
	public static int canven0 = 0, canven1 = 0, canven2 = 0, canven3 = 0, canven4 = 0, suma = 0;
	public static int canvenmil0 = 0, canvenmil1 = 0, canvenmil2 = 0, canvenmil3 = 0, canvenmil4 = 0;
	public static double imptot = 0,imptot0 = 0.0, imptot1 = 0.0, imptot2 = 0.0, imptot3 = 0.0, imptot4 = 0.0; 
	public static double preciopro = 0.0, preciomayor = 0.0, preciomenor = 0.0;
	
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		double pre;
		mod = leerModelo1();
		pre = leerPrecio1(mod);
		mostrarPrecio(pre);
	}
	
	int leerModelo1() {
		return cboModelo.getSelectedIndex();
	}
	
	double leerPrecio1(int m) {
		switch (m) {
			case 0: return Tienda.precio0; 
			case 1: return Tienda.precio1;
			case 2: return Tienda.precio2;
			case 3: return Tienda.precio3;
			default: return Tienda.precio4;
		}
	}
	
	void preciosCalcular(double p) {
		for (int i = 0; i < p; i++) {
			if (i == 0) 
				preciomenor= p ;
			else (p < preciomenor)
				preciomenor = p;
			
		}
	}
	
	void mostrarPrecio(double pre) {
		txtPrecio.setText(pre + "");
	}
	
	protected void actionPerformedBtnVender(ActionEvent e) {
		txtS.setText("");
		int mod, can, obs;
		double pre, icom, ides, ipag;
		String modelo;
		mod = leerModelo();
		pre = leerPrecio(mod);
		can = leerCantidad();
		modelo = leerModeloLadrillo(mod);
		icom = calcularImporteCompra(mod, can);
		ides = calcularImporteDescuento(can, icom);
		ipag = calcularImportePagar(icom, ides);
		sumaImportePagar();
		obs = calcularObsequios(can);
		efectuarIncrementos(mod, can, ipag);
		mostrarResultados(modelo, pre, can, obs, icom, ides, ipag);
		suma++;
		MensajeDeAlerta();
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	double leerPrecio(int m) {
		switch (m) {
			case 0: return Tienda.precio0;
			case 1: return Tienda.precio1;
			case 2: return Tienda.precio2;
			case 3: return Tienda.precio3;
			default: return Tienda.precio4;
		}
	}
	
	int leerCantidad() {
		return Integer.parseInt(txtCantidad.getText());
	}
	
	String leerModeloLadrillo(int m) {
		switch (m) {
			case 0: return "Ladrillo King Kong 18 Huecos";
			case 1: return "Ladrillo King Kong Macizo";
			case 2: return "Ladrillo Pandereta Acanalada";
			case 3: return "Ladrillo Patelero";
			default: return "Ladrillo Techo Hueco";
		}
	}
	
	
	double calcularImporteCompra(int m, int c) {
		switch (m) {
			case 0: return 610.0 * c;
			case 1: return 920.0 * c;
			case 2: return 510.0 * c;
			case 3: return 2200 * c;
			default: return 2350 * c;
		}
	}
	
	double calcularImporteDescuento (int c, double ic) {
		if (c >= 1 && c <= 5) return Tienda.porcentaje1 * ic;
		else if (c >= 6 && c <= 10) return Tienda.porcentaje2 * ic;
		else if (c >= 11 && c <= 15) return Tienda.porcentaje3 * ic;
		else if (c >= 16 && c <= 20) return Tienda.porcentaje4 * ic;
		else return Tienda.porcentaje5 * ic;
	}

	double calcularImportePagar(double ic, double id) {
		return id-ic;
	}
	
	int calcularObsequios (int c) {
		if (c >= 1 && c <= 5) return Tienda.obsequioCantidad1;
		else if (c >= 6 && c <= 10) return Tienda.obsequioCantidad2;
		else if (c >= 11 && c <= 15) return Tienda.obsequioCantidad3;
		else if (c >= 16 && c <= 20) return Tienda.obsequioCantidad4;
		else return Tienda.obsequioCantidad5;
	}
	
	void preciosPromedio() {
			preciopro = (Tienda.precio0 + Tienda.precio1 + Tienda.precio2 + Tienda.precio3 + Tienda.precio4) / 5;
	}
	
	void efectuarIncrementos(int m, int c, double ip) {
		switch (m) {
			case 0:
				imptot0 += ip;
				canven0 ++;
				canvenmil0 += c;
				break;
			case 1:
				imptot1 += ip;
				canven1 ++;
				canvenmil1 += c;

				break;
			case 2:
				imptot2 += ip;
				canven2 ++;
				canvenmil2 += c;
				break;
			case 3:
				imptot3 += ip;
				canven3 ++;
				canvenmil3 += c;
				break;
			default:
				imptot4 += ip;
				canven4 ++;
				canvenmil4 += c;
		}
	}
	
	double sumaImportePagar() {
		return imptot = imptot0 + imptot1+ imptot2 + imptot3 + imptot4;
	}
	
	void MensajeDeAlerta (){
		 while (suma % 5 == 0) {
		//Declarar una variable referencia que permita controlar la caja
			DialogoMensajeDeAlerta d;
		//Crear la caja de diálogo y asignar el control a las variables
			d = new DialogoMensajeDeAlerta();
		//Fijar la localización de la caja de diálogo en relación a la ventana de la tienda
			d.setLocationRelativeTo(this);
		//Hacer visible la caja de diálogo
			d.setVisible(true); 
			break;
		 }
	}
	
	
	void mostrarResultados (String mod, double p, int c, int o, double ic, double id, double ip) {
		
		txtS.append("Modelo               : " + mod + "\n");
		txtS.append("Precio por millar    : " + p + "\n");
		txtS.append("Cantidad adquirida   : " + c + " millares" + "\n");
		txtS.append("Importe compra       : " + ic + "\n");
		txtS.append("Importe descuento    : " + id + "\n");
		txtS.append("Importe a pagar      : " + ip + "\n");
		txtS.append("Tipo de obsequio     : " + "Badilejo" + "\n");
		txtS.append("Unidades a obsequiar : " + o + "\n");	
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}




----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 01:51:34.534
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 01:51:34.538
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 01:51:43.297
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.JComboBox;
import javax.swing.JButton;
import javax.swing.DefaultComboBoxModel;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JTextArea;

public class Vender extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JComboBox<String> cboModelo;
	private JButton btnVender;
	private JButton btnCerrar;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Vender dialog = new Vender();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public Vender() {
		setTitle("Vender");
		setModal(true);
		setBounds(100, 100, 577, 400);
		getContentPane().setLayout(null);
		
		lblModelo = new JLabel("Modelo");
		lblModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblModelo.setBounds(20, 10, 78, 28);
		getContentPane().add(lblModelo);
		
		lblPrecio = new JLabel("Precio (S/)");
		lblPrecio.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblPrecio.setBounds(20, 48, 78, 28);
		getContentPane().add(lblPrecio);
		
		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblCantidad.setBounds(20, 86, 78, 28);
		getContentPane().add(lblCantidad);
		
		txtPrecio = new JTextField();
		txtPrecio.setText("610.0\r\n");
		txtPrecio.setFont(new Font("Tahoma", Font.PLAIN, 14));
		txtPrecio.setBounds(111, 55, 215, 19);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);
		
		txtCantidad = new JTextField();
		txtCantidad.setFont(new Font("Tahoma", Font.PLAIN, 14));
		txtCantidad.setColumns(10);
		txtCantidad.setBounds(111, 93, 215, 19);
		getContentPane().add(txtCantidad);
		
		cboModelo = new JComboBox<String>();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Ladrillo King Kong 18 Huecos", "Ladrillo King Kong Macizo", "Ladrillo Pandereta Acanalada", "Ladrillo Patelero", "Ladrillo Techo Hueco"}));
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.setBounds(108, 16, 215, 21);
		getContentPane().add(cboModelo);
		
		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnVender.setBounds(455, 16, 85, 21);
		getContentPane().add(btnVender);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(455, 41, 85, 21);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		txtS.setBounds(10, 139, 543, 214);
		getContentPane().add(txtS);
	}
	
		//Datos minimos para el funcionamiento de la generación de reportes
	public static int canven0 = 0, canven1 = 0, canven2 = 0, canven3 = 0, canven4 = 0, suma = 0;
	public static int canvenmil0 = 0, canvenmil1 = 0, canvenmil2 = 0, canvenmil3 = 0, canvenmil4 = 0;
	public static double imptot = 0,imptot0 = 0.0, imptot1 = 0.0, imptot2 = 0.0, imptot3 = 0.0, imptot4 = 0.0; 
	public static double preciopro = 0.0, preciomayor = 0.0, preciomenor = 0.0;
	
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		double pre;
		mod = leerModelo1();
		pre = leerPrecio1(mod);
		mostrarPrecio(pre);
	}
	
	int leerModelo1() {
		return cboModelo.getSelectedIndex();
	}
	
	double leerPrecio1(int m) {
		switch (m) {
			case 0: return Tienda.precio0; 
			case 1: return Tienda.precio1;
			case 2: return Tienda.precio2;
			case 3: return Tienda.precio3;
			default: return Tienda.precio4;
		}
	}
	
	void preciosCalcular(double p) {
		for (int i = 0; i < p; i++) {
			if (i == 0) 
				preciomenor= p ;
			
			else (p < preciomenor)
				preciomenor = p;
			
		}
	}
	
	void mostrarPrecio(double pre) {
		txtPrecio.setText(pre + "");
	}
	
	protected void actionPerformedBtnVender(ActionEvent e) {
		txtS.setText("");
		int mod, can, obs;
		double pre, icom, ides, ipag;
		String modelo;
		mod = leerModelo();
		pre = leerPrecio(mod);
		can = leerCantidad();
		modelo = leerModeloLadrillo(mod);
		icom = calcularImporteCompra(mod, can);
		ides = calcularImporteDescuento(can, icom);
		ipag = calcularImportePagar(icom, ides);
		sumaImportePagar();
		obs = calcularObsequios(can);
		efectuarIncrementos(mod, can, ipag);
		mostrarResultados(modelo, pre, can, obs, icom, ides, ipag);
		suma++;
		MensajeDeAlerta();
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	double leerPrecio(int m) {
		switch (m) {
			case 0: return Tienda.precio0;
			case 1: return Tienda.precio1;
			case 2: return Tienda.precio2;
			case 3: return Tienda.precio3;
			default: return Tienda.precio4;
		}
	}
	
	int leerCantidad() {
		return Integer.parseInt(txtCantidad.getText());
	}
	
	String leerModeloLadrillo(int m) {
		switch (m) {
			case 0: return "Ladrillo King Kong 18 Huecos";
			case 1: return "Ladrillo King Kong Macizo";
			case 2: return "Ladrillo Pandereta Acanalada";
			case 3: return "Ladrillo Patelero";
			default: return "Ladrillo Techo Hueco";
		}
	}
	
	
	double calcularImporteCompra(int m, int c) {
		switch (m) {
			case 0: return 610.0 * c;
			case 1: return 920.0 * c;
			case 2: return 510.0 * c;
			case 3: return 2200 * c;
			default: return 2350 * c;
		}
	}
	
	double calcularImporteDescuento (int c, double ic) {
		if (c >= 1 && c <= 5) return Tienda.porcentaje1 * ic;
		else if (c >= 6 && c <= 10) return Tienda.porcentaje2 * ic;
		else if (c >= 11 && c <= 15) return Tienda.porcentaje3 * ic;
		else if (c >= 16 && c <= 20) return Tienda.porcentaje4 * ic;
		else return Tienda.porcentaje5 * ic;
	}

	double calcularImportePagar(double ic, double id) {
		return id-ic;
	}
	
	int calcularObsequios (int c) {
		if (c >= 1 && c <= 5) return Tienda.obsequioCantidad1;
		else if (c >= 6 && c <= 10) return Tienda.obsequioCantidad2;
		else if (c >= 11 && c <= 15) return Tienda.obsequioCantidad3;
		else if (c >= 16 && c <= 20) return Tienda.obsequioCantidad4;
		else return Tienda.obsequioCantidad5;
	}
	
	void preciosPromedio() {
			preciopro = (Tienda.precio0 + Tienda.precio1 + Tienda.precio2 + Tienda.precio3 + Tienda.precio4) / 5;
	}
	
	void efectuarIncrementos(int m, int c, double ip) {
		switch (m) {
			case 0:
				imptot0 += ip;
				canven0 ++;
				canvenmil0 += c;
				break;
			case 1:
				imptot1 += ip;
				canven1 ++;
				canvenmil1 += c;

				break;
			case 2:
				imptot2 += ip;
				canven2 ++;
				canvenmil2 += c;
				break;
			case 3:
				imptot3 += ip;
				canven3 ++;
				canvenmil3 += c;
				break;
			default:
				imptot4 += ip;
				canven4 ++;
				canvenmil4 += c;
		}
	}
	
	double sumaImportePagar() {
		return imptot = imptot0 + imptot1+ imptot2 + imptot3 + imptot4;
	}
	
	void MensajeDeAlerta (){
		 while (suma % 5 == 0) {
		//Declarar una variable referencia que permita controlar la caja
			DialogoMensajeDeAlerta d;
		//Crear la caja de diálogo y asignar el control a las variables
			d = new DialogoMensajeDeAlerta();
		//Fijar la localización de la caja de diálogo en relación a la ventana de la tienda
			d.setLocationRelativeTo(this);
		//Hacer visible la caja de diálogo
			d.setVisible(true); 
			break;
		 }
	}
	
	
	void mostrarResultados (String mod, double p, int c, int o, double ic, double id, double ip) {
		
		txtS.append("Modelo               : " + mod + "\n");
		txtS.append("Precio por millar    : " + p + "\n");
		txtS.append("Cantidad adquirida   : " + c + " millares" + "\n");
		txtS.append("Importe compra       : " + ic + "\n");
		txtS.append("Importe descuento    : " + id + "\n");
		txtS.append("Importe a pagar      : " + ip + "\n");
		txtS.append("Tipo de obsequio     : " + "Badilejo" + "\n");
		txtS.append("Unidades a obsequiar : " + o + "\n");	
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}




----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 01:51:43.299
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 01:51:43.300
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 01:52:43.591
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.JComboBox;
import javax.swing.JButton;
import javax.swing.DefaultComboBoxModel;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JTextArea;

public class Vender extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JComboBox<String> cboModelo;
	private JButton btnVender;
	private JButton btnCerrar;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Vender dialog = new Vender();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public Vender() {
		setTitle("Vender");
		setModal(true);
		setBounds(100, 100, 577, 400);
		getContentPane().setLayout(null);
		
		lblModelo = new JLabel("Modelo");
		lblModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblModelo.setBounds(20, 10, 78, 28);
		getContentPane().add(lblModelo);
		
		lblPrecio = new JLabel("Precio (S/)");
		lblPrecio.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblPrecio.setBounds(20, 48, 78, 28);
		getContentPane().add(lblPrecio);
		
		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblCantidad.setBounds(20, 86, 78, 28);
		getContentPane().add(lblCantidad);
		
		txtPrecio = new JTextField();
		txtPrecio.setText("610.0\r\n");
		txtPrecio.setFont(new Font("Tahoma", Font.PLAIN, 14));
		txtPrecio.setBounds(111, 55, 215, 19);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);
		
		txtCantidad = new JTextField();
		txtCantidad.setFont(new Font("Tahoma", Font.PLAIN, 14));
		txtCantidad.setColumns(10);
		txtCantidad.setBounds(111, 93, 215, 19);
		getContentPane().add(txtCantidad);
		
		cboModelo = new JComboBox<String>();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Ladrillo King Kong 18 Huecos", "Ladrillo King Kong Macizo", "Ladrillo Pandereta Acanalada", "Ladrillo Patelero", "Ladrillo Techo Hueco"}));
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.setBounds(108, 16, 215, 21);
		getContentPane().add(cboModelo);
		
		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnVender.setBounds(455, 16, 85, 21);
		getContentPane().add(btnVender);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(455, 41, 85, 21);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		txtS.setBounds(10, 139, 543, 214);
		getContentPane().add(txtS);
	}
	
		//Datos minimos para el funcionamiento de la generación de reportes
	public static int canven0 = 0, canven1 = 0, canven2 = 0, canven3 = 0, canven4 = 0, suma = 0;
	public static int canvenmil0 = 0, canvenmil1 = 0, canvenmil2 = 0, canvenmil3 = 0, canvenmil4 = 0;
	public static double imptot = 0,imptot0 = 0.0, imptot1 = 0.0, imptot2 = 0.0, imptot3 = 0.0, imptot4 = 0.0; 
	public static double preciopro = 0.0, preciomayor = 0.0, preciomenor = 0.0;
	
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		double pre;
		mod = leerModelo1();
		pre = leerPrecio1(mod);
		mostrarPrecio(pre);
	}
	
	int leerModelo1() {
		return cboModelo.getSelectedIndex();
	}
	
	double leerPrecio1(int m) {
		switch (m) {
			case 0: return Tienda.precio0; 
			case 1: return Tienda.precio1;
			case 2: return Tienda.precio2;
			case 3: return Tienda.precio3;
			default: return Tienda.precio4;
		}
	}
	
	void preciosCalcular(double p) {
		for (int i = 0; i < p; i++) {
			if (i == 0) 
				preciomenor = p ;
				preciomayor = p;
			 (p < preciomenor)
				preciomenor = p;
			
		}
	}
	
	void mostrarPrecio(double pre) {
		txtPrecio.setText(pre + "");
	}
	
	protected void actionPerformedBtnVender(ActionEvent e) {
		txtS.setText("");
		int mod, can, obs;
		double pre, icom, ides, ipag;
		String modelo;
		mod = leerModelo();
		pre = leerPrecio(mod);
		can = leerCantidad();
		modelo = leerModeloLadrillo(mod);
		icom = calcularImporteCompra(mod, can);
		ides = calcularImporteDescuento(can, icom);
		ipag = calcularImportePagar(icom, ides);
		sumaImportePagar();
		obs = calcularObsequios(can);
		efectuarIncrementos(mod, can, ipag);
		mostrarResultados(modelo, pre, can, obs, icom, ides, ipag);
		suma++;
		MensajeDeAlerta();
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	double leerPrecio(int m) {
		switch (m) {
			case 0: return Tienda.precio0;
			case 1: return Tienda.precio1;
			case 2: return Tienda.precio2;
			case 3: return Tienda.precio3;
			default: return Tienda.precio4;
		}
	}
	
	int leerCantidad() {
		return Integer.parseInt(txtCantidad.getText());
	}
	
	String leerModeloLadrillo(int m) {
		switch (m) {
			case 0: return "Ladrillo King Kong 18 Huecos";
			case 1: return "Ladrillo King Kong Macizo";
			case 2: return "Ladrillo Pandereta Acanalada";
			case 3: return "Ladrillo Patelero";
			default: return "Ladrillo Techo Hueco";
		}
	}
	
	
	double calcularImporteCompra(int m, int c) {
		switch (m) {
			case 0: return 610.0 * c;
			case 1: return 920.0 * c;
			case 2: return 510.0 * c;
			case 3: return 2200 * c;
			default: return 2350 * c;
		}
	}
	
	double calcularImporteDescuento (int c, double ic) {
		if (c >= 1 && c <= 5) return Tienda.porcentaje1 * ic;
		else if (c >= 6 && c <= 10) return Tienda.porcentaje2 * ic;
		else if (c >= 11 && c <= 15) return Tienda.porcentaje3 * ic;
		else if (c >= 16 && c <= 20) return Tienda.porcentaje4 * ic;
		else return Tienda.porcentaje5 * ic;
	}

	double calcularImportePagar(double ic, double id) {
		return id-ic;
	}
	
	int calcularObsequios (int c) {
		if (c >= 1 && c <= 5) return Tienda.obsequioCantidad1;
		else if (c >= 6 && c <= 10) return Tienda.obsequioCantidad2;
		else if (c >= 11 && c <= 15) return Tienda.obsequioCantidad3;
		else if (c >= 16 && c <= 20) return Tienda.obsequioCantidad4;
		else return Tienda.obsequioCantidad5;
	}
	
	void preciosPromedio() {
			preciopro = (Tienda.precio0 + Tienda.precio1 + Tienda.precio2 + Tienda.precio3 + Tienda.precio4) / 5;
	}
	
	void efectuarIncrementos(int m, int c, double ip) {
		switch (m) {
			case 0:
				imptot0 += ip;
				canven0 ++;
				canvenmil0 += c;
				break;
			case 1:
				imptot1 += ip;
				canven1 ++;
				canvenmil1 += c;

				break;
			case 2:
				imptot2 += ip;
				canven2 ++;
				canvenmil2 += c;
				break;
			case 3:
				imptot3 += ip;
				canven3 ++;
				canvenmil3 += c;
				break;
			default:
				imptot4 += ip;
				canven4 ++;
				canvenmil4 += c;
		}
	}
	
	double sumaImportePagar() {
		return imptot = imptot0 + imptot1+ imptot2 + imptot3 + imptot4;
	}
	
	void MensajeDeAlerta (){
		 while (suma % 5 == 0) {
		//Declarar una variable referencia que permita controlar la caja
			DialogoMensajeDeAlerta d;
		//Crear la caja de diálogo y asignar el control a las variables
			d = new DialogoMensajeDeAlerta();
		//Fijar la localización de la caja de diálogo en relación a la ventana de la tienda
			d.setLocationRelativeTo(this);
		//Hacer visible la caja de diálogo
			d.setVisible(true); 
			break;
		 }
	}
	
	
	void mostrarResultados (String mod, double p, int c, int o, double ic, double id, double ip) {
		
		txtS.append("Modelo               : " + mod + "\n");
		txtS.append("Precio por millar    : " + p + "\n");
		txtS.append("Cantidad adquirida   : " + c + " millares" + "\n");
		txtS.append("Importe compra       : " + ic + "\n");
		txtS.append("Importe descuento    : " + id + "\n");
		txtS.append("Importe a pagar      : " + ip + "\n");
		txtS.append("Tipo de obsequio     : " + "Badilejo" + "\n");
		txtS.append("Unidades a obsequiar : " + o + "\n");	
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}




----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 01:52:43.593
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 01:52:43.594
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 01:52:43.609
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.JComboBox;
import javax.swing.JButton;
import javax.swing.DefaultComboBoxModel;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JTextArea;

public class Vender extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JComboBox<String> cboModelo;
	private JButton btnVender;
	private JButton btnCerrar;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Vender dialog = new Vender();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public Vender() {
		setTitle("Vender");
		setModal(true);
		setBounds(100, 100, 577, 400);
		getContentPane().setLayout(null);
		
		lblModelo = new JLabel("Modelo");
		lblModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblModelo.setBounds(20, 10, 78, 28);
		getContentPane().add(lblModelo);
		
		lblPrecio = new JLabel("Precio (S/)");
		lblPrecio.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblPrecio.setBounds(20, 48, 78, 28);
		getContentPane().add(lblPrecio);
		
		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblCantidad.setBounds(20, 86, 78, 28);
		getContentPane().add(lblCantidad);
		
		txtPrecio = new JTextField();
		txtPrecio.setText("610.0\r\n");
		txtPrecio.setFont(new Font("Tahoma", Font.PLAIN, 14));
		txtPrecio.setBounds(111, 55, 215, 19);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);
		
		txtCantidad = new JTextField();
		txtCantidad.setFont(new Font("Tahoma", Font.PLAIN, 14));
		txtCantidad.setColumns(10);
		txtCantidad.setBounds(111, 93, 215, 19);
		getContentPane().add(txtCantidad);
		
		cboModelo = new JComboBox<String>();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Ladrillo King Kong 18 Huecos", "Ladrillo King Kong Macizo", "Ladrillo Pandereta Acanalada", "Ladrillo Patelero", "Ladrillo Techo Hueco"}));
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.setBounds(108, 16, 215, 21);
		getContentPane().add(cboModelo);
		
		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnVender.setBounds(455, 16, 85, 21);
		getContentPane().add(btnVender);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(455, 41, 85, 21);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		txtS.setBounds(10, 139, 543, 214);
		getContentPane().add(txtS);
	}
	
		//Datos minimos para el funcionamiento de la generación de reportes
	public static int canven0 = 0, canven1 = 0, canven2 = 0, canven3 = 0, canven4 = 0, suma = 0;
	public static int canvenmil0 = 0, canvenmil1 = 0, canvenmil2 = 0, canvenmil3 = 0, canvenmil4 = 0;
	public static double imptot = 0,imptot0 = 0.0, imptot1 = 0.0, imptot2 = 0.0, imptot3 = 0.0, imptot4 = 0.0; 
	public static double preciopro = 0.0, preciomayor = 0.0, preciomenor = 0.0;
	
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		double pre;
		mod = leerModelo1();
		pre = leerPrecio1(mod);
		mostrarPrecio(pre);
	}
	
	int leerModelo1() {
		return cboModelo.getSelectedIndex();
	}
	
	double leerPrecio1(int m) {
		switch (m) {
			case 0: return Tienda.precio0; 
			case 1: return Tienda.precio1;
			case 2: return Tienda.precio2;
			case 3: return Tienda.precio3;
			default: return Tienda.precio4;
		}
	}
	
	void preciosCalcular(double p) {
		for (int i = 0; i < p; i++) {
			if (i == 0) 
				preciomenor = p ;
				preciomayor = p;
			 (p < preciomenor)
				preciomenor = p;
			
		}
	}
	
	void mostrarPrecio(double pre) {
		txtPrecio.setText(pre + "");
	}
	
	protected void actionPerformedBtnVender(ActionEvent e) {
		txtS.setText("");
		int mod, can, obs;
		double pre, icom, ides, ipag;
		String modelo;
		mod = leerModelo();
		pre = leerPrecio(mod);
		can = leerCantidad();
		modelo = leerModeloLadrillo(mod);
		icom = calcularImporteCompra(mod, can);
		ides = calcularImporteDescuento(can, icom);
		ipag = calcularImportePagar(icom, ides);
		sumaImportePagar();
		obs = calcularObsequios(can);
		efectuarIncrementos(mod, can, ipag);
		mostrarResultados(modelo, pre, can, obs, icom, ides, ipag);
		suma++;
		MensajeDeAlerta();
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	double leerPrecio(int m) {
		switch (m) {
			case 0: return Tienda.precio0;
			case 1: return Tienda.precio1;
			case 2: return Tienda.precio2;
			case 3: return Tienda.precio3;
			default: return Tienda.precio4;
		}
	}
	
	int leerCantidad() {
		return Integer.parseInt(txtCantidad.getText());
	}
	
	String leerModeloLadrillo(int m) {
		switch (m) {
			case 0: return "Ladrillo King Kong 18 Huecos";
			case 1: return "Ladrillo King Kong Macizo";
			case 2: return "Ladrillo Pandereta Acanalada";
			case 3: return "Ladrillo Patelero";
			default: return "Ladrillo Techo Hueco";
		}
	}
	
	
	double calcularImporteCompra(int m, int c) {
		switch (m) {
			case 0: return 610.0 * c;
			case 1: return 920.0 * c;
			case 2: return 510.0 * c;
			case 3: return 2200 * c;
			default: return 2350 * c;
		}
	}
	
	double calcularImporteDescuento (int c, double ic) {
		if (c >= 1 && c <= 5) return Tienda.porcentaje1 * ic;
		else if (c >= 6 && c <= 10) return Tienda.porcentaje2 * ic;
		else if (c >= 11 && c <= 15) return Tienda.porcentaje3 * ic;
		else if (c >= 16 && c <= 20) return Tienda.porcentaje4 * ic;
		else return Tienda.porcentaje5 * ic;
	}

	double calcularImportePagar(double ic, double id) {
		return id-ic;
	}
	
	int calcularObsequios (int c) {
		if (c >= 1 && c <= 5) return Tienda.obsequioCantidad1;
		else if (c >= 6 && c <= 10) return Tienda.obsequioCantidad2;
		else if (c >= 11 && c <= 15) return Tienda.obsequioCantidad3;
		else if (c >= 16 && c <= 20) return Tienda.obsequioCantidad4;
		else return Tienda.obsequioCantidad5;
	}
	
	void preciosPromedio() {
			preciopro = (Tienda.precio0 + Tienda.precio1 + Tienda.precio2 + Tienda.precio3 + Tienda.precio4) / 5;
	}
	
	void efectuarIncrementos(int m, int c, double ip) {
		switch (m) {
			case 0:
				imptot0 += ip;
				canven0 ++;
				canvenmil0 += c;
				break;
			case 1:
				imptot1 += ip;
				canven1 ++;
				canvenmil1 += c;

				break;
			case 2:
				imptot2 += ip;
				canven2 ++;
				canvenmil2 += c;
				break;
			case 3:
				imptot3 += ip;
				canven3 ++;
				canvenmil3 += c;
				break;
			default:
				imptot4 += ip;
				canven4 ++;
				canvenmil4 += c;
		}
	}
	
	double sumaImportePagar() {
		return imptot = imptot0 + imptot1+ imptot2 + imptot3 + imptot4;
	}
	
	void MensajeDeAlerta (){
		 while (suma % 5 == 0) {
		//Declarar una variable referencia que permita controlar la caja
			DialogoMensajeDeAlerta d;
		//Crear la caja de diálogo y asignar el control a las variables
			d = new DialogoMensajeDeAlerta();
		//Fijar la localización de la caja de diálogo en relación a la ventana de la tienda
			d.setLocationRelativeTo(this);
		//Hacer visible la caja de diálogo
			d.setVisible(true); 
			break;
		 }
	}
	
	
	void mostrarResultados (String mod, double p, int c, int o, double ic, double id, double ip) {
		
		txtS.append("Modelo               : " + mod + "\n");
		txtS.append("Precio por millar    : " + p + "\n");
		txtS.append("Cantidad adquirida   : " + c + " millares" + "\n");
		txtS.append("Importe compra       : " + ic + "\n");
		txtS.append("Importe descuento    : " + id + "\n");
		txtS.append("Importe a pagar      : " + ip + "\n");
		txtS.append("Tipo de obsequio     : " + "Badilejo" + "\n");
		txtS.append("Unidades a obsequiar : " + o + "\n");	
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}




----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 01:52:43.611
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 01:52:43.613
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 01:52:44.408
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.JComboBox;
import javax.swing.JButton;
import javax.swing.DefaultComboBoxModel;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JTextArea;

public class Vender extends JDialog implements ActionListener {
	private JLabel lblModelo;
	private JLabel lblPrecio;
	private JLabel lblCantidad;
	private JTextField txtPrecio;
	private JTextField txtCantidad;
	private JComboBox<String> cboModelo;
	private JButton btnVender;
	private JButton btnCerrar;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Vender dialog = new Vender();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public Vender() {
		setTitle("Vender");
		setModal(true);
		setBounds(100, 100, 577, 400);
		getContentPane().setLayout(null);
		
		lblModelo = new JLabel("Modelo");
		lblModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblModelo.setBounds(20, 10, 78, 28);
		getContentPane().add(lblModelo);
		
		lblPrecio = new JLabel("Precio (S/)");
		lblPrecio.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblPrecio.setBounds(20, 48, 78, 28);
		getContentPane().add(lblPrecio);
		
		lblCantidad = new JLabel("Cantidad");
		lblCantidad.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblCantidad.setBounds(20, 86, 78, 28);
		getContentPane().add(lblCantidad);
		
		txtPrecio = new JTextField();
		txtPrecio.setText("610.0\r\n");
		txtPrecio.setFont(new Font("Tahoma", Font.PLAIN, 14));
		txtPrecio.setBounds(111, 55, 215, 19);
		getContentPane().add(txtPrecio);
		txtPrecio.setColumns(10);
		
		txtCantidad = new JTextField();
		txtCantidad.setFont(new Font("Tahoma", Font.PLAIN, 14));
		txtCantidad.setColumns(10);
		txtCantidad.setBounds(111, 93, 215, 19);
		getContentPane().add(txtCantidad);
		
		cboModelo = new JComboBox<String>();
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Ladrillo King Kong 18 Huecos", "Ladrillo King Kong Macizo", "Ladrillo Pandereta Acanalada", "Ladrillo Patelero", "Ladrillo Techo Hueco"}));
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.setBounds(108, 16, 215, 21);
		getContentPane().add(cboModelo);
		
		btnVender = new JButton("Vender");
		btnVender.addActionListener(this);
		btnVender.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnVender.setBounds(455, 16, 85, 21);
		getContentPane().add(btnVender);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(455, 41, 85, 21);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		txtS.setBounds(10, 139, 543, 214);
		getContentPane().add(txtS);
	}
	
		//Datos minimos para el funcionamiento de la generación de reportes
	public static int canven0 = 0, canven1 = 0, canven2 = 0, canven3 = 0, canven4 = 0, suma = 0;
	public static int canvenmil0 = 0, canvenmil1 = 0, canvenmil2 = 0, canvenmil3 = 0, canvenmil4 = 0;
	public static double imptot = 0,imptot0 = 0.0, imptot1 = 0.0, imptot2 = 0.0, imptot3 = 0.0, imptot4 = 0.0; 
	public static double preciopro = 0.0, preciomayor = 0.0, preciomenor = 0.0;
	
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
		if (e.getSource() == btnVender) {
			actionPerformedBtnVender(e);
		}
	}
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		double pre;
		mod = leerModelo1();
		pre = leerPrecio1(mod);
		mostrarPrecio(pre);
	}
	
	int leerModelo1() {
		return cboModelo.getSelectedIndex();
	}
	
	double leerPrecio1(int m) {
		switch (m) {
			case 0: return Tienda.precio0; 
			case 1: return Tienda.precio1;
			case 2: return Tienda.precio2;
			case 3: return Tienda.precio3;
			default: return Tienda.precio4;
		}
	}
	
	void preciosCalcular(double p) {
		for (int i = 0; i < p; i++) {
			if (i == 0) 
				preciomenor = p ;
				preciomayor = p;
			 (p < preciomenor)
				preciomenor = p;
			
		}
	}
	
	void mostrarPrecio(double pre) {
		txtPrecio.setText(pre + "");
	}
	
	protected void actionPerformedBtnVender(ActionEvent e) {
		txtS.setText("");
		int mod, can, obs;
		double pre, icom, ides, ipag;
		String modelo;
		mod = leerModelo();
		pre = leerPrecio(mod);
		can = leerCantidad();
		modelo = leerModeloLadrillo(mod);
		icom = calcularImporteCompra(mod, can);
		ides = calcularImporteDescuento(can, icom);
		ipag = calcularImportePagar(icom, ides);
		sumaImportePagar();
		obs = calcularObsequios(can);
		efectuarIncrementos(mod, can, ipag);
		mostrarResultados(modelo, pre, can, obs, icom, ides, ipag);
		suma++;
		MensajeDeAlerta();
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	double leerPrecio(int m) {
		switch (m) {
			case 0: return Tienda.precio0;
			case 1: return Tienda.precio1;
			case 2: return Tienda.precio2;
			case 3: return Tienda.precio3;
			default: return Tienda.precio4;
		}
	}
	
	int leerCantidad() {
		return Integer.parseInt(txtCantidad.getText());
	}
	
	String leerModeloLadrillo(int m) {
		switch (m) {
			case 0: return "Ladrillo King Kong 18 Huecos";
			case 1: return "Ladrillo King Kong Macizo";
			case 2: return "Ladrillo Pandereta Acanalada";
			case 3: return "Ladrillo Patelero";
			default: return "Ladrillo Techo Hueco";
		}
	}
	
	
	double calcularImporteCompra(int m, int c) {
		switch (m) {
			case 0: return 610.0 * c;
			case 1: return 920.0 * c;
			case 2: return 510.0 * c;
			case 3: return 2200 * c;
			default: return 2350 * c;
		}
	}
	
	double calcularImporteDescuento (int c, double ic) {
		if (c >= 1 && c <= 5) return Tienda.porcentaje1 * ic;
		else if (c >= 6 && c <= 10) return Tienda.porcentaje2 * ic;
		else if (c >= 11 && c <= 15) return Tienda.porcentaje3 * ic;
		else if (c >= 16 && c <= 20) return Tienda.porcentaje4 * ic;
		else return Tienda.porcentaje5 * ic;
	}

	double calcularImportePagar(double ic, double id) {
		return id-ic;
	}
	
	int calcularObsequios (int c) {
		if (c >= 1 && c <= 5) return Tienda.obsequioCantidad1;
		else if (c >= 6 && c <= 10) return Tienda.obsequioCantidad2;
		else if (c >= 11 && c <= 15) return Tienda.obsequioCantidad3;
		else if (c >= 16 && c <= 20) return Tienda.obsequioCantidad4;
		else return Tienda.obsequioCantidad5;
	}
	
	void preciosPromedio() {
			preciopro = (Tienda.precio0 + Tienda.precio1 + Tienda.precio2 + Tienda.precio3 + Tienda.precio4) / 5;
	}
	
	void efectuarIncrementos(int m, int c, double ip) {
		switch (m) {
			case 0:
				imptot0 += ip;
				canven0 ++;
				canvenmil0 += c;
				break;
			case 1:
				imptot1 += ip;
				canven1 ++;
				canvenmil1 += c;

				break;
			case 2:
				imptot2 += ip;
				canven2 ++;
				canvenmil2 += c;
				break;
			case 3:
				imptot3 += ip;
				canven3 ++;
				canvenmil3 += c;
				break;
			default:
				imptot4 += ip;
				canven4 ++;
				canvenmil4 += c;
		}
	}
	
	double sumaImportePagar() {
		return imptot = imptot0 + imptot1+ imptot2 + imptot3 + imptot4;
	}
	
	void MensajeDeAlerta (){
		 while (suma % 5 == 0) {
		//Declarar una variable referencia que permita controlar la caja
			DialogoMensajeDeAlerta d;
		//Crear la caja de diálogo y asignar el control a las variables
			d = new DialogoMensajeDeAlerta();
		//Fijar la localización de la caja de diálogo en relación a la ventana de la tienda
			d.setLocationRelativeTo(this);
		//Hacer visible la caja de diálogo
			d.setVisible(true); 
			break;
		 }
	}
	
	
	void mostrarResultados (String mod, double p, int c, int o, double ic, double id, double ip) {
		
		txtS.append("Modelo               : " + mod + "\n");
		txtS.append("Precio por millar    : " + p + "\n");
		txtS.append("Cantidad adquirida   : " + c + " millares" + "\n");
		txtS.append("Importe compra       : " + ic + "\n");
		txtS.append("Importe descuento    : " + id + "\n");
		txtS.append("Importe a pagar      : " + ip + "\n");
		txtS.append("Tipo de obsequio     : " + "Badilejo" + "\n");
		txtS.append("Unidades a obsequiar : " + o + "\n");	
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}




----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 01:52:44.410
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 01:52:44.411
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:26:49.960
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			masIG;
		else  (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:26:49.966
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:26:49.969
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:26:53.854
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			masIG;
		else  (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:26:53.858
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:26:53.861
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:26:54.831
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			masIG;
		else  (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:26:54.833
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:26:54.834
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:26:56.976
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			masIG;
		else  (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:26:56.977
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:26:56.978
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:26:57.891
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			masIG;
		else  (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:26:57.892
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:26:57.893
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:27:01.008
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:27:01.011
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:27:01.014
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:27:01.029
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:27:01.031
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:27:01.033
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:27:03.537
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 > Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:27:03.539
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:27:03.541
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:27:05.051
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 > Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:27:05.053
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:27:05.054
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:27:05.068
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 > Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:27:05.069
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:27:05.070
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:27:07.135
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 > Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:27:07.137
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:27:07.138
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:27:07.148
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 > Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1036)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui 4 0 2023-06-26 02:27:07.150
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1036)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:27:12.260
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 > Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:27:12.263
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:27:12.265
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:27:14.584
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 > Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:27:14.586
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:27:14.587
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:27:16.597
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 > Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:27:16.600
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:27:16.601
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:27:17.222
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 > Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:27:17.223
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:27:17.225
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:27:18.112
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 > Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:27:18.113
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:27:18.114
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:27:36.846
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 > Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:27:36.850
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:27:36.853
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:27:46.633
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 > Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:27:46.635
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:27:46.635
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:27:46.645
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 > Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1036)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui 4 0 2023-06-26 02:27:46.647
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1036)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:27:50.194
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:27:50.197
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:27:50.201
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:27:50.219
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:27:50.221
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:27:50.222
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:27:57.221
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:27:57.223
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:27:57.224
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:28:42.270
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:28:42.271
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:28:42.273
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:28:54.822
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:28:54.824
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:28:54.825
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:28:56.059
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:28:56.061
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:28:56.063
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:28:58.789
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:28:58.790
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:28:58.791
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:29:10.399
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:29:10.400
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:29:10.401
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:29:10.425
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1036)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui 4 0 2023-06-26 02:29:10.427
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1036)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:29:11.387
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:29:11.389
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:29:11.390
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:29:11.413
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:29:11.414
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:29:11.416
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:29:11.934
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:29:11.935
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:29:11.937
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:29:15.912
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			"masCO";
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:29:15.912
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:29:15.914
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:29:16.007
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			"masCO";
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:29:16.008
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:29:16.009
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:29:24.436
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			"";
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:29:24.438
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:29:24.439
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:29:25.069
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			"";
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:29:25.070
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:29:25.071
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:29:30.687
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			"";
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:439)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:366)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:326)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:276)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:319)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:253)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:584)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:653)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:443)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1268)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1036)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1061)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1046)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1513)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4884)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4762)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4930)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3624)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:29:30.689
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:439)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:366)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:326)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:276)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:319)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:253)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:584)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:653)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:443)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1268)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1036)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1061)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1046)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1513)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4884)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4762)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4930)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3624)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:29:30.690
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:439)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:366)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:326)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:276)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:319)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:253)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:584)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:653)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:443)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1268)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1036)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1061)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1046)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1088)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1513)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4884)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4762)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4930)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3624)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:29:31.471
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			"";
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:29:31.472
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:29:31.474
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:29:37.413
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			"";
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:29:37.414
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:29:37.415
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:29:37.434
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			"";
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:29:37.436
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:29:37.437
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:29:37.451
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			"";
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:29:37.452
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:29:37.454
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:29:38.966
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			" más que la cantidad óptima";;
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:29:38.967
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:29:38.969
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:29:39.801
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			" más que la cantidad óptima";;
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:29:39.802
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:29:39.803
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:29:40.097
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			" más que la cantidad óptima";;
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:29:40.099
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:29:40.100
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:29:41.483
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			" más que la cantidad óptima";
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:29:41.484
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:29:41.486
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:29:42.499
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			" más que la cantidad óptima";
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:29:42.501
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:29:42.503
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:29:42.515
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			" más que la cantidad óptima";
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:29:42.515
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:29:42.517
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:30:12.545
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			" más que la cantidad óptima";
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:30:12.547
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:30:12.548
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:30:13.222
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			" más que la cantidad óptima";
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:30:13.225
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:30:13.226
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:30:18.551
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masco;
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:30:18.558
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:30:18.559
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:30:20.076
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)
