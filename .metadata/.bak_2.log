!SESSION 2023-06-25 23:02:26.955 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=es_PE
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

This is a continuation of log file C:\Users\deseo\OneDrive\Escritorio\PROYECTO ALGORITMIA\Proyecto Base por terminar\.metadata\.bak_1.log
Created Time: 2023-06-26 02:30:20.081

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:30:20.082
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:30:20.085
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:30:20.105
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		if else (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:30:20.107
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:30:20.109
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:30:24.111
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:30:24.112
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:30:24.114
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:30:25.126
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:30:25.127
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:30:25.128
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:30:25.143
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:30:25.144
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:30:25.146
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:30:33.107
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:30:33.108
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:30:33.109
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:30:34.152
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0);
			masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:30:34.154
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:30:34.155
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:30:35.166
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0);
			masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:30:35.168
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:30:35.169
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:30:35.186
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0);
			masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:30:35.188
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:30:35.189
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:30:36.181
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0)
			masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:30:36.183
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:30:36.184
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:30:37.697
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) {
			
		}
			masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:30:37.699
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:30:37.700
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:30:39.219
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) {
			
		}
			masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:30:39.220
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:30:39.222
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:30:39.239
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) {
			
		}
			masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:30:39.240
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:30:39.242
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:30:46.746
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:30:46.749
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:30:46.750
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:30:47.519
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:30:47.521
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:30:47.522
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:30:47.957
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:30:47.960
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:30:47.961
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:30:48.765
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			{masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:30:48.766
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:30:48.768
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:30:48.781
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			{masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:30:48.782
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:30:48.784
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:30:52.340
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			{masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:30:52.343
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:30:52.346
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:30:54.079
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			{masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:30:54.082
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:30:54.084
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:30:55.359
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			{masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:30:55.360
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:30:55.361
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:30:56.872
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:30:56.874
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:30:56.875
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:30:56.967
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:30:56.969
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:30:56.970
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:30:57.887
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:30:57.889
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:30:57.890
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:31:07.442
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			{masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:31:07.444
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:31:07.446
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:31:07.929
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			{masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:31:07.930
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:31:07.931
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:31:10.479
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:31:10.481
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:31:10.481
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:31:11.201
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:31:11.202
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:31:11.203
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:31:16.086
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:31:16.088
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:31:16.089
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:31:16.099
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 = Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1036)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui 4 0 2023-06-26 02:31:16.100
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1036)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:31:17.500
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 == Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:31:17.501
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:31:17.502
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:31:18.100
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 == Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:31:18.101
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:31:18.102
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:31:20.515
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 == Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:31:20.516
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:31:20.516
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:31:25.730
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 == Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:31:25.732
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:31:25.733
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:31:28.031
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 == Vender.comparacion0)

;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:31:28.033
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:31:28.034
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:31:28.463
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 == Vender.comparacion0)

;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:31:28.464
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:31:28.465
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:31:30.548
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 == Vender.comparacion0)

;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:31:30.549
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:31:30.550
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:31:32.570
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 == Vender.comparacion0)
;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:31:32.573
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:31:32.574
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:31:33.586
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 == Vender.comparacion0)
			;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:31:33.588
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:31:33.590
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:31:33.988
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 == Vender.comparacion0)
			;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:31:33.989
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:31:33.990
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:31:37.605
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 == Vender.comparacion0)
			masCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:31:37.606
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:31:37.607
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:31:37.622
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 == Vender.comparacion0)
			masCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:31:37.624
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:31:37.625
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:31:42.128
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 == Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:31:42.131
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:31:42.132
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:31:42.147
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 == Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:31:42.149
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:31:42.150
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:31:43.644
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 == Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:31:43.646
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:31:43.647
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:31:43.663
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 == Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:31:43.666
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:31:43.667
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:31:47.437
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 == Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:31:47.438
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:31:47.439
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:31:52.998
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 == Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:31:53.000
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:31:53.002
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:31:53.017
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 == Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:31:53.019
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:31:53.020
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:31:53.051
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 == Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:31:53.052
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:31:53.053
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:31:54.170
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil1 == Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:31:54.173
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:31:54.174
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:31:54.584
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil1 == Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:31:54.585
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:31:54.586
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:31:55.687
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 == Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:31:55.688
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:31:55.690
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:31:56.446
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 == Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:31:56.448
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:31:56.450
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:31:57.700
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 == Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2023-06-26 02:31:57.702
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2023-06-26 02:31:57.704
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:31:59.235
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 == Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:31:59.236
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:31:59.237
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:32:10.355
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 == Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:32:10.356
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:32:10.357
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:32:10.370
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 == Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1036)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui 4 0 2023-06-26 02:32:10.371
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1036)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:33:00.982
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 == Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:33:00.987
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:33:00.992
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:33:03.186
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 == Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:33:03.187
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:33:03.188
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:33:08.847
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 == Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:33:08.851
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:33:08.854
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:33:08.898
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 == Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-06-26 02:33:08.902
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-06-26 02:33:08.904
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-06-26 02:33:10.889
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package cibertec;

import java.awt.EventQueue;

import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.JScrollPane;
import javax.swing.JDialog;
import javax.swing.UIManager;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Font;

public class DialogoGenerarReportes extends JDialog implements ActionListener {
	private JLabel lblTipodereporte;
	private JComboBox<String> cboModelo;
	private JButton btnCerrar;
	private JTextArea txtS;
	private JScrollPane scrollPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Throwable e) {
			e.printStackTrace();
		}
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DialogoGenerarReportes dialog = new DialogoGenerarReportes();
					dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					dialog.setVisible(true);
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar reportes ");
		setModal(true);
		setBounds(100, 100, 656, 300);
		getContentPane().setLayout(null);
		
		lblTipodereporte = new JLabel("Tipo de reporte");
		lblTipodereporte.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblTipodereporte.setBounds(10, 11, 108, 14);
		getContentPane().add(lblTipodereporte);
		
		cboModelo = new JComboBox<String>();
		cboModelo.setFont(new Font("Tahoma", Font.PLAIN, 14));
		cboModelo.addActionListener(this);
		cboModelo.setModel(new DefaultComboBoxModel<String>(new String[] {"Venta por modelo", "Comparacion con el precio promedio ", "Comparacion con la cantidad optima", "Estadistica general"}));
		cboModelo.setBounds(113, 7, 308, 22);
		getContentPane().add(cboModelo);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCerrar.setBounds(519, 7, 89, 23);
		getContentPane().add(btnCerrar);
		
		txtS = new JTextArea();
		txtS.setEditable(false);
		
		scrollPane = new JScrollPane(txtS);
		scrollPane.setBounds(10, 49, 622, 204);
		scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		getContentPane().add(scrollPane);

	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnCerrar(e);
		}
		if (e.getSource() == cboModelo) {
			actionPerformedCboModelo(e);
		}
	}
	
		//Variables para la estadística general
	String masCO = " más que la cantidad óptima";
	String igualCO = "igual que la cantidad óptima";
	String menosCO = " menos que la cantidad óptima";
	
	protected void actionPerformedCboModelo(ActionEvent e) {
		int mod;
		txtS.setText("");
		mod = leerModelo();
		switch (mod) {
			case 0:
				mostrarVentasPorModelo(); break;
			case 1:
				mostrarComparacionPrecioPromedio(); break;
			case 2:
				mostrarComparacionCantidadOptima(); break;
			default: 
				mostrarEstadisticaGeneral(); break;
		}
	}
	
	int leerModelo() {
		return cboModelo.getSelectedIndex();
	}
	
	void mostrarVentasPorModelo() {
		Imprimir("VENTAS POR MODELO" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de ventas            : " + Vender.canven0);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Importe total acumulado       : " + Vender.imptot0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad de ventas            : " + Vender.canven1);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Vender.imptot1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de ventas            : " + Vender.canven2);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Importe total acumulado       : " + Vender.imptot2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de ventas            : " + Vender.canven3);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Importe total acumulado       : " + Vender.imptot3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de ventas            : " + Vender.canven4);
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Importe total acumulado       : " + Vender.imptot4);
		}
	
	void mostrarComparacionPrecioPromedio() {
		
	}
	
	void mostrarComparacionCantidadOptima() {
		Imprimir("COMPARACIÓN CON LA CANTIDAD ÓPTIMA" + "\n");
		Imprimir("Modelo                        : " + "Ladrillo King Kong 18 Huecos");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil0);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima0);
		Imprimir("Comparación                   : " + Vender.comparacion0);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo King Kong Macizo");
		Imprimir("Cantidad Óptima               : " + Vender.canvenmil1);
		Imprimir("Importe total acumulado       : " + Tienda.cantidadOptima1);
		Imprimir("Comparación                   : " + Vender.comparacion1);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Pandereta Acanalada");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil2);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima2);
		Imprimir("Comparación                   : " +  Vender.comparacion2);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Patelero");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil3);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima3);
		Imprimir("Comparación                   : " + Vender.comparacion3);
		Imprimir("");
		
		Imprimir("Modelo                        : " + "Ladrillo Techo Hueco");
		Imprimir("Cantidad de millares vendidas : " + Vender.canvenmil4);
		Imprimir("Cantidad Óptima               : " + Tienda.cantidadOptima4);
		Imprimir("Comparación                   : " + Vender.comparacion4);
	}
	
	void mostrarEstadisticaGeneral() {
		Imprimir("ESTADÍSTICA GENERAL" + "\n");
		Imprimir("Precio promedio                 : " + "S/. " + Vender.preciopro);
		Imprimir("Precio mayor                    : " + "S/. " + Vender.preciomayor);
		Imprimir("Precio menor                    : " + "S/. " + Vender.preciomenor);
		Imprimir("Cantidad de modelos no vendidos : "	);
	}
	
	void comparacion0() {
		if (Vender.canvenmil0 > Vender.comparacion0) 
			masCO;
		else if (Vender.canvenmil0 == Vender.comparacion0)
			igualCO;
		else  (Vender.canvenmil0 < Vender.comparacion0)
			menosCO;
	}
	
	void Imprimir(String cad) {
		txtS.append(cad + "\n");
	}
	protected void actionPerformedBtnCerrar(ActionEvent e) {
		dispose();
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
